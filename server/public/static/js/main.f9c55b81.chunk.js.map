{"version":3,"sources":["store/configureStore.js","util/index.js","components/TableView.js","containers/TableViewContainer.js","components/Filters.js","containers/FiltersContainer.js","components/Dates.js","containers/DatesContainer.js","components/ChartView.js","containers/ChartViewContainer.js","App.js","serviceWorker.js","services/api.js","sagas/index.js","index.js","reducers/index.js","store/configureStore.prod.js","actions/index.js"],"names":["module","exports","require","prettifyColumnName","name","replace","charAt","toUpperCase","slice","TableViewHead","createSortHandler","property","event","_this","props","onRequestSort","_this2","this","_this$props","orderDir","orderBy","columns","react_default","a","createElement","TableHead_default","TableRow_default","map","column","TableCell_default","key","sortDirection","TableSortLabel_default","active","direction","onClick","React","Component","ALL_COLUMNS","TableViewToolbar","classes","onColumnChange","Toolbar_default","className","root","FormGroup_default","actions","FormControlLabel_default","control","Checkbox_default","checked","includes","onChange","e","value","label","withStyles","theme","paddingRight","spacing","unit","flexDirection","spacer","flex","title","TableViewPaginationActions","handleFirstPageButtonClick","_this3","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props2","IconButton_default","disabled","aria-label","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","PureComponent","TableViewPaginationActionsWrapped","flexShrink","color","palette","text","secondary","marginLeft","withTheme","TableView","handleChangePage","_this4","setTableViewPage","handleChangePerPage","setTableViewPerPage","parseInt","target","handleRequestSort","setTableViewOrder","handleColumnChange","newColumns","concat","Object","toConsumableArray","filter","c","setTableViewColumns","_this$props3","perPage","rows","emptyRows","min","length","Paper_default","TableView_TableViewToolbar","tableWrapper","Table_default","table","TableView_TableViewHead","TableBody_default","row","index","style","height","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","width","marginTop","minWidth","overflowX","connect","state","objectSpread","tableView","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","COST_MODELS","Filters","advertisers","campaigns","advertiserId","campaignId","costModel","setFilters","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","multiple","input","Input_default","id","renderValue","selected","chips","Chip_default","find","chip","_ref","MenuItem_default","getStyles","_ref2","activeIds","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","display","flexWrap","margin","noLabel","lineHeight","filters","Dates","startDate","endDate","setDates","console","log","material_ui_pickers_esm","keyboard","format","placeholder","mask","date","toDate","disableOpenOnEnter","animateYearScrolling","dates","ALL_METRICS","ChartView","setChartViewSecondColumn","dist_index_esm","chartType","options","legend","position","hAxis","textPosition","data","FormLabel_default","component","RadioGroup_default","metric","Radio_default","justifyContent","padding","chartView","App","Fragment","CssBaseline_default","utils","MomentUtils","datesAndFilters","DatesContainer","FiltersContainer","ChartViewContainer","TableViewContainer","Boolean","window","location","hostname","match","REACT_APP_API_URL","REPORTS_PARAMS","fetchReports","_x","_fetchReports","apply","arguments","_callee","params","url","response","regenerator_default","wrap","_context","prev","next","appendSearchParams","URL","fetch","sent","status","Error","abrupt","json","stop","REPORTS_COUNT_PARAMS","fetchReportsCount","_x2","_fetchReportsCount","_callee2","_context2","fetchAdvertisers","_fetchAdvertisers","_callee3","_context3","fetchCampaigns","_fetchCampaigns","_callee4","_context4","paramWhitelist","keys","forEach","Array","isArray","searchParams","append","Date","moment","JSON","stringify","onStartup","onTableViewChange","onTableViewColumnsChange","onChartViewSecondColumnChange","onFiltersOrDatesChange","all","fork","onReportsRequest","api","onOtherApiRequest","_marked","put","request","_marked2","actionCreators","apiCall","mark","takeEvery","REQUEST","payload","select","call","success","t0","failure","_context5","take","_context6","SET_TABLE_VIEW_PAGE","SET_TABLE_VIEW_PER_PAGE","SET_TABLE_VIEW_ORDER","SET_TABLE_VIEW_COLUMNS","_marked3","_context7","_marked4","_context8","SET_CHART_VIEW_SECOND_COLUMN","_marked5","_context9","SET_FILTERS","SET_DATES","_marked6","store","configureStore","__INITIAL_STATE__","runSaga","rootSaga","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","combineReducers","undefined","loadingRows","loadingCount","type","SUCCESS","loading","_ref3","_ref4","_ref5","_ref6","initialState","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","close","dispatch","END","__webpack_require__","d","__webpack_exports__","FAILURE","FETCH_REPORTS","fetchActions","FETCH_REPORTS_COUNT","FETCH_ADVERTISERS","FETCH_CAMPAIGNS","fetchActionCreators","_Users_user_code_mytestcase_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_user_code_mytestcase_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.f9c55b81.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.prod');\n} else {\n  module.exports = require('./configureStore.dev');\n}\n","export function prettifyColumnName(name) {\n  name = name.replace(/([A-Z])/g, ' $1');\n  name = name.charAt(0).toUpperCase() + name.slice(1);\n  return name.replace(/Id/g, 'ID');\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import EditIcon from '@material-ui/icons/EditIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { prettifyColumnName } from '../util';\n\n\nclass TableViewHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { orderDir, orderBy, columns } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map(column => {\n            return (\n              <TableCell\n                key={column}\n                sortDirection={orderBy === column ? orderDir : false}\n              >\n                <TableSortLabel\n                  active={orderBy === column}\n                  direction={orderDir}\n                  onClick={this.createSortHandler(column)}\n                >\n                  {prettifyColumnName(column)}\n                </TableSortLabel>\n              </TableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nTableViewHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  orderDir: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  columns: PropTypes.arrayOf(String).isRequired\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  actions: {\n    flexDirection: 'row'\n  },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\nconst ALL_COLUMNS = ['date', 'advertiserId', 'advertiserName', 'campaignId', 'campaignName', 'costModel', 'impressions', 'clicks', 'installs', 'cost'];\nlet TableViewToolbar = props => {\n  const { classes, columns, onColumnChange } = props;\n\n  return (\n    <Toolbar\n      className={classes.root}\n    >\n      {/* <div className={classes.title}>\n        <Typography variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      </div> */}\n      {/* <div className={classes.spacer} /> */}\n      <FormGroup className={classes.actions}>\n        {ALL_COLUMNS.map(column =>\n          <FormControlLabel\n            key={column}\n            control={\n              <Checkbox checked={columns.includes(column)} onChange={e => onColumnChange(e, column)} value={column} />\n            }\n            label={prettifyColumnName(column)}\n          />\n        )}\n      </FormGroup>\n    </Toolbar>\n  );\n};\n\nTableViewToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onColumnChange: PropTypes.func.isRequired\n};\n\nTableViewToolbar = withStyles(toolbarStyles)(TableViewToolbar);\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TableViewPaginationActions extends PureComponent {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTableViewPaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TableViewPaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TableViewPaginationActions,\n);\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass TableView extends PureComponent {\n  handleChangePage = (event, page) => {\n    this.props.setTableViewPage(page);\n  };\n\n  handleChangePerPage = event => {\n    this.props.setTableViewPerPage(parseInt(event.target.value, 10));\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let orderDir = 'desc';\n\n    if (this.props.orderBy === property && this.props.orderDir === 'desc') {\n      orderDir = 'asc';\n    }\n\n    this.props.setTableViewOrder({ orderBy, orderDir });\n  };\n\n  handleColumnChange = (event, column) => {\n    const { columns } = this.props;\n    const newColumns = event.target.checked ?\n      [...columns, column] :\n      columns.filter(c => c !== column)\n    this.props.setTableViewColumns(\n      ALL_COLUMNS.filter(c =>  newColumns.includes(c))\n    );\n  };\n\n  render() {\n    const { classes, page, perPage, columns, rows, count, orderBy, orderDir } = this.props;\n    const emptyRows = perPage - Math.min(perPage, rows.length);\n\n    return (\n      <Paper className={classes.root}>\n        <TableViewToolbar columns={columns} onColumnChange={this.handleColumnChange}/>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableViewHead\n              orderDir={orderDir}\n              orderBy={orderBy}\n              columns={columns}\n              onRequestSort={this.handleRequestSort}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                return (\n                  <TableRow key={index}>\n                    {columns.map(column =>\n                      <TableCell key={column}>{column === 'cost' ? `$${row[column]}` : row[column]}</TableCell>\n                    )}\n                  </TableRow>\n                );\n              })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={columns.length} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, 50]}\n                  colSpan={columns.length}\n                  count={count}\n                  rowsPerPage={perPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangePerPage}\n                  ActionsComponent={TableViewPaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nTableView.propTypes = {\n  classes: PropTypes.object.isRequired,\n  rows: PropTypes.array.isRequired,\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  columns: PropTypes.arrayOf(String).isRequired,\n  loadingRows: PropTypes.bool.isRequired,\n  loadingCount: PropTypes.bool.isRequired,\n  count: PropTypes.number.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  orderDir: PropTypes.string.isRequired,\n  setTableViewPage: PropTypes.func.isRequired,\n  setTableViewPerPage: PropTypes.func.isRequired,\n  setTableViewOrder: PropTypes.func.isRequired,\n  setTableViewColumns: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(TableView);\n","import TableView from '../components/TableView';\nimport { connect } from 'react-redux';\nimport {\n  setTableViewPage,\n  setTableViewPerPage,\n  setTableViewOrder,\n  setTableViewColumns\n} from '../actions';\n\nexport default connect(\n  state => ({ ...state.tableView }),\n  {\n    setTableViewPage,\n    setTableViewPerPage,\n    setTableViewOrder,\n    setTableViewColumns\n  }\n)(TableView);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  label: {\n    lineHeight: '32px',\n    margin: '23px 8px 8px'\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n}\n\nconst COST_MODELS = [\n  'per_impression',\n  'per_click',\n  'per_install'\n]\nclass Filters extends PureComponent {\n  render() {\n    const { advertisers, campaigns, advertiserId, campaignId, costModel, theme, classes, setFilters } = this.props;\n    return <div className={classes.root}>\n      <div className={classes.label}>Filters:</div>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"advertisers\">Advertisers</InputLabel>\n        <Select\n          multiple\n          value={advertiserId}\n          onChange={event => setFilters({ advertiserId: event.target.value })}\n          input={<Input id=\"advertisers\" />}\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(value => (\n                <Chip key={value} label={value + ': ' + advertisers.find(a => a.id === value).name} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {advertisers.map(({ name, id }) => (\n            <MenuItem key={id} value={id} style={getStyles(id, advertiserId, theme)}>\n              {id}: {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"campaigns\">Campaigns</InputLabel>\n        <Select\n          multiple\n          value={campaignId}\n          onChange={event => setFilters({ campaignId: event.target.value })}\n          input={<Input id=\"campaigns\" />}\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(value => (\n                <Chip key={value} label={value + ': ' + campaigns.find(a => a.id === value).name} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {campaigns.map(({ name, id }) => (\n            <MenuItem key={id} value={id} style={getStyles(id, campaignId, theme)}>\n              {id}: {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"costModel\">Cost Model</InputLabel>\n        <Select\n          multiple\n          value={costModel}\n          onChange={event => setFilters({ costModel: event.target.value })}\n          input={<Input id=\"costModel\" />}\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(value => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {COST_MODELS.map(id => (\n            <MenuItem key={id} value={id} style={getStyles(id, costModel, theme)}>\n              {id}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>;\n  }\n};\n\nfunction getStyles(id, activeIds, theme) {\n  return {\n    fontWeight:\n      activeIds.indexOf(id) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nFilters.propTypes = {\n  classes: PropTypes.object.isRequired,\n  advertiserId: PropTypes.arrayOf(Number).isRequired,\n  campaignId: PropTypes.arrayOf(Number).isRequired,\n  costModel: PropTypes.arrayOf(String).isRequired,\n  advertisers: PropTypes.array.isRequired,\n  campaigns: PropTypes.array.isRequired,\n  setFilters: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Filters);\n","import Filters from '../components/Filters';\nimport { connect } from 'react-redux';\nimport { setFilters } from '../actions';\n\nexport default connect(\n  state => ({\n    ...state.filters,\n    advertisers: state.advertisers,\n    campaigns: state.campaigns\n  }),\n  { setFilters }\n)(Filters);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core';\nimport { DatePicker } from 'material-ui-pickers';\n\nclass Dates extends PureComponent {\n  render() {\n    const { startDate, endDate, setDates } = this.props;\n    console.log(this.props);\n    return <div>\n      <DatePicker\n        keyboard\n        label=\"Start date\"\n        format=\"YYYY-MM-DD\"\n        placeholder=\"2018-10-10\"\n        // handle clearing outside => pass plain array if you are not controlling value outside\n        mask={value =>\n          value ? [/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/] : []\n        }\n        value={startDate}\n        onChange={date => {setDates({ startDate: date.toDate() })}}\n        disableOpenOnEnter\n        animateYearScrolling={false}\n      />\n      <DatePicker\n        keyboard\n        label=\"End date\"\n        format=\"YYYY-MM-DD\"\n        placeholder=\"10/10/2018\"\n        // handle clearing outside => pass plain array if you are not controlling value outside\n        mask={value =>\n          value ? [/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/] : []\n        }\n        value={endDate}\n        onChange={date => setDates({ endDate: date })}\n        disableOpenOnEnter\n        animateYearScrolling={false}\n      />\n    </div>\n  }\n}\n\nDates.propTypes = {\n  startDate: PropTypes.instanceOf(Date).isRequired,\n  endDate: PropTypes.instanceOf(Date).isRequired,\n  setDates: PropTypes.func.isRequired\n}\n\nexport default Dates;\n\n","import Dates from '../components/Dates';\nimport { connect } from 'react-redux';\nimport { setDates } from '../actions';\n\nexport default connect(\n  state => ({\n    ...state.dates\n  }),\n  { setDates }\n)(Dates);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from \"react-google-charts\";\nimport { withStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { prettifyColumnName } from '../util';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap-reverse',\n    justifyContent: 'center',\n    marginTop: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 3,\n    width: '100%'\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    marginLeft: theme.spacing.unit * 3,\n    minWidth: 120\n  }\n});\n\nconst ALL_METRICS = ['impressions', 'clicks', 'installs', 'cost'];\nclass ChartView extends PureComponent {\n  render() {\n    const { classes, columns, rows, setChartViewSecondColumn } = this.props\n    return (\n      <Paper className={classes.root}>\n        <Chart\n          width={'600px'}\n          height={'250px'}\n          chartType=\"Line\"\n          options={{\n            legend: {\n              position: 'none'\n            },\n            hAxis: {\n              textPosition: 'in'\n            }\n          }}\n          data={[\n            columns.map(prettifyColumnName),\n            ...rows.map(row => columns.map(c => row[c]))\n          ]}\n        />\n        <FormControl className={classes.formControl}>\n          <FormLabel component=\"legend\">Metric</FormLabel>\n          <RadioGroup\n            aria-label=\"Metric\"\n            value={columns[1]}\n            onChange={e => setChartViewSecondColumn(e.target.value)}\n          >\n            {ALL_METRICS.map(metric =>\n              <FormControlLabel value={metric} control={<Radio />} label={prettifyColumnName(metric)} />\n            )}\n          </RadioGroup>\n        </FormControl>\n      </Paper>\n    );\n  }\n}\n\nChartView.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(String).isRequired,\n  rows: PropTypes.array.isRequired,\n  setChartViewSecondColumn: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(ChartView);\n","import ChartView from '../components/ChartView';\nimport { connect } from 'react-redux';\nimport { setChartViewSecondColumn } from '../actions';\n\nexport default connect(\n  state => ({ ...state.chartView }),\n  { setChartViewSecondColumn }\n)(ChartView);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport './App.css';\nimport ReportTableContainer from './containers/TableViewContainer';\nimport FiltersContainer from './containers/FiltersContainer';\nimport DatesContainer from './containers/DatesContainer';\nimport ChartViewContainer from './containers/ChartViewContainer';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  datesAndFilters: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  }\n});\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <div className={this.props.classes.datesAndFilters}>\n            <DatesContainer />\n            <FiltersContainer />\n          </div>\n          <ChartViewContainer />\n          <ReportTableContainer />\n        </MuiPickersUtilsProvider>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'isomorphic-fetch';\nimport { URL } from 'whatwg-url';\nimport moment from 'moment';\nconst REACT_APP_API_URL = (process.env.REACT_APP_API_URL || 'http://localhost:3001') + '/api';\n\nconst REPORTS_PARAMS = ['columns', 'page', 'perPage', 'filter', 'startDate', 'endDate', 'orderBy', 'orderDir'];\nexport async function fetchReports(params) {\n  const url = new URL(`${REACT_APP_API_URL}/reports`);\n  appendSearchParams(url, params, REPORTS_PARAMS);\n  const response = await fetch(url);\n  if (response.status !== 200) {\n    throw new Error('Failed to load reports')\n  }\n  return response.json();\n}\n\nconst REPORTS_COUNT_PARAMS = ['columns', 'filter', 'startDate', 'endDate'];\nexport async function fetchReportsCount(params) {\n  const url = new URL(`${REACT_APP_API_URL}/reports/count`);\n  appendSearchParams(url, params, REPORTS_COUNT_PARAMS);\n  const response = await fetch(url);\n  if (response.status !== 200) {\n    throw new Error('Failed to load reports count')\n  }\n  return response.json();\n}\nexport async function fetchAdvertisers() {\n  const response = await fetch(`${REACT_APP_API_URL}/advertisers`);\n  if (response.status !== 200) {\n    throw new Error('Failed to load advertisers')\n  }\n  return response.json();\n}\n\nexport async function fetchCampaigns() {\n  const response = await fetch(`${REACT_APP_API_URL}/campaigns`);\n  if (response.status !== 200) {\n    throw new Error('Failed to load campaigns')\n  }\n  return response.json();\n}\n\nfunction appendSearchParams(url, params, paramWhitelist) {\n  Object.keys(params).forEach(key => {\n    if (!paramWhitelist.includes(key)) {\n      return;\n    }\n    if (Array.isArray(params[key])) {\n      params[key].forEach(value => url.searchParams.append(`${key}[]`, value))\n    } else if (params[key] instanceof Date) {\n      url.searchParams.append(key, moment(params[key]).format('YYYY-MM-DD'));\n    } else if (typeof params[key] === 'object'){\n      url.searchParams.append(key, JSON.stringify(params[key]));\n    } else {\n      url.searchParams.append(key, params[key]);\n    }\n  });\n}\n","import { all, put, fork, take, call, select, takeEvery } from 'redux-saga/effects'\nimport {\n  REQUEST,\n  fetchReports,\n  fetchReportsCount,\n  SET_TABLE_VIEW_PAGE,\n  SET_TABLE_VIEW_PER_PAGE,\n  SET_TABLE_VIEW_ORDER,\n  SET_TABLE_VIEW_COLUMNS,\n  fetchAdvertisers,\n  fetchCampaigns,\n  SET_FILTERS,\n  SET_DATES,\n  SET_CHART_VIEW_SECOND_COLUMN\n} from '../actions';\nimport * as api from '../services/api';\n\nexport default function* root() {\n  yield all([\n    fork(onReportsRequest(fetchReports, api.fetchReports)),\n    fork(onReportsRequest(fetchReportsCount, api.fetchReportsCount)),\n    fork(onOtherApiRequest(fetchAdvertisers, api.fetchAdvertisers)),\n    fork(onOtherApiRequest(fetchCampaigns, api.fetchCampaigns)),\n    fork(onTableViewColumnsChange),\n    fork(onTableViewChange),\n    fork(onChartViewSecondColumnChange),\n    fork(onFiltersOrDatesChange),\n    fork(onStartup)\n  ]);\n};\n\nfunction* onStartup () {\n  yield put(fetchAdvertisers.request());\n  yield put(fetchCampaigns.request());\n  yield put(fetchReports.request({ target: 'chartView' }));\n  yield put(fetchReports.request({ target: 'tableView' }));\n  yield put(fetchReportsCount.request({ target: 'tableView' }));\n}\n\nfunction onReportsRequest(actionCreators, apiCall) {\n  return function* () {\n    yield takeEvery(actionCreators[REQUEST], function* ({ payload }) {\n      const { target } = payload;\n      const state = yield select();\n      try {\n        const data = yield call(apiCall, { ...state[target], filter: state.filters, ...state.dates });\n        yield put(actionCreators.success({ target, data }));\n      } catch (data) {\n        yield put(actionCreators.failure({ target, data }));\n      }\n    });\n  }\n}\n\nfunction onOtherApiRequest(actionCreators, apiCall) {\n  return function* () {\n    while (true) {\n      const { payload } = yield take(actionCreators[REQUEST]);\n      try {\n        const data = yield call(apiCall, payload);\n        yield put(actionCreators.success({ data }));\n      } catch (data) {\n        yield put(actionCreators.failure({ data }));\n      }\n    }\n  }\n}\n\nfunction* onTableViewChange() {\n  while (true) {\n    yield take([SET_TABLE_VIEW_PAGE, SET_TABLE_VIEW_PER_PAGE, SET_TABLE_VIEW_ORDER, SET_TABLE_VIEW_COLUMNS]);\n    yield put(fetchReports.request({ target: 'tableView' }));\n  }\n}\n\nfunction* onTableViewColumnsChange() {\n  while (true) {\n    yield take(SET_TABLE_VIEW_COLUMNS);\n    yield put(fetchReportsCount.request({ target: 'tableView' }));\n  }\n}\n\nfunction* onChartViewSecondColumnChange() {\n  while (true) {\n    yield take(SET_CHART_VIEW_SECOND_COLUMN);\n    yield put(fetchReports.request({ target: 'chartView' }));\n  }\n}\n\nfunction* onFiltersOrDatesChange() {\n  while (true) {\n    yield take([SET_FILTERS, SET_DATES]);\n    yield put(fetchReports.request({ target: 'chartView' }));\n    yield put(fetchReports.request({ target: 'tableView' }));\n    yield put(fetchReportsCount.request({ target: 'tableView' }));\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport rootSaga from './sagas';\nimport { Provider } from 'react-redux'\n\nconst store = configureStore(window.__INITIAL_STATE__)\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import moment from 'moment';\nimport {\n  fetchReports,\n  fetchReportsCount,\n  fetchAdvertisers,\n  fetchCampaigns,\n  REQUEST,\n  SUCCESS,\n  SET_TABLE_VIEW_PER_PAGE,\n  SET_TABLE_VIEW_PAGE,\n  SET_TABLE_VIEW_ORDER,\n  SET_TABLE_VIEW_COLUMNS,\n  SET_FILTERS,\n  SET_DATES,\n  SET_CHART_VIEW_SECOND_COLUMN\n} from '../actions';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  tableView,\n  chartView,\n  advertisers,\n  campaigns,\n  filters,\n  dates\n});\n\nfunction tableView(state = {\n  loadingRows: true,\n  loadingCount: true,\n  rows: [],\n  count: 0,\n  orderBy: 'date',\n  orderDir: 'desc',\n  page: 0,\n  perPage: 5,\n  columns: ['date', 'cost']\n}, { type, payload }) {\n  switch (type) {\n    case fetchReports[REQUEST]:\n      return payload.target !== 'tableView' ? state : { ...state, loadingRows: true };\n    case fetchReportsCount[REQUEST]:\n      return payload.target !== 'tableView' ? state : { ...state, loadingCount: true };\n    case fetchReports[SUCCESS]:\n      return payload.target !== 'tableView' ? state : {\n        ...state,\n        rows: payload.data,\n        loadingRows: false\n      };\n    case fetchReportsCount[SUCCESS]:\n      return payload.target !== 'tableView' ? state : {\n        ...state,\n        count: payload.data[0].count,\n        loadingCount: false\n      };\n    case SET_TABLE_VIEW_PAGE:\n      return { ...state, page: payload };\n    case SET_TABLE_VIEW_PER_PAGE:\n      return { ...state, perPage: payload };\n    case SET_TABLE_VIEW_ORDER:\n      return { ...state, ...payload };\n    case SET_TABLE_VIEW_COLUMNS:\n      if (payload.length < 1) {\n        return state;\n      }\n      const orderBy = payload.includes(state.orderBy) ? state.orderBy : payload[0];\n      const orderDir = orderBy !== state.orderBy ? 'desc' : state.orderDir;\n      return { ...state, columns: payload, page: 0, orderBy, orderDir };\n    default:\n      return state;\n  }\n}\n\nfunction chartView(state = {\n  loading: true,\n  columns: ['date', 'cost'],\n  orderBy: 'date',\n  orderDir: 'asc',\n  perPage: 9999,\n  rows: []\n}, { type, payload }) {\n  switch (type) {\n    case fetchReports[REQUEST]:\n      return payload.target !== 'chartView' ? state : { ...state, loadingRows: true };\n    case fetchReports[SUCCESS]:\n      return payload.target !== 'chartView' ? state : {\n        ...state,\n        rows: payload.data,\n        loading: false\n      };\n    case SET_CHART_VIEW_SECOND_COLUMN:\n      return {\n        ...state,\n        columns: ['date', payload]\n      }\n    default:\n      return state;\n  }\n}\n\nfunction advertisers(state = [], { type, payload }) {\n  switch (type) {\n    case fetchAdvertisers[SUCCESS]:\n      return payload.data;\n    default:\n      return state;\n  }\n}\n\nfunction campaigns(state = [], { type, payload }) {\n  switch (type) {\n    case fetchCampaigns[SUCCESS]:\n      return payload.data;\n    default:\n      return state;\n  }\n}\n\nfunction filters(state = {\n  advertiserId: [],\n  campaignId: [],\n  costModel: []\n}, { type, payload }) {\n  switch (type) {\n    case SET_FILTERS:\n      return { ...state, ...payload };\n    default:\n    return state;\n  }\n}\n\nfunction dates(state = {\n  startDate: moment('2018-01-01').toDate(),\n  endDate: moment('2018-12-31').toDate()\n}, { type, payload }) {\n  switch (type) {\n    case SET_DATES:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(sagaMiddleware)\n  );\n\n  store.runSaga = sagaMiddleware.run;\n  store.close = () => store.dispatch(END);\n  return store;\n}\n","export const SET_TABLE_VIEW_PAGE = 'SET_TABLE_VIEW_PAGE';\nexport const SET_TABLE_VIEW_PER_PAGE = 'SET_TABLE_VIEW_PER_PAGE';\nexport const SET_TABLE_VIEW_ORDER = 'SET_TABLE_VIEW_ORDER';\nexport const SET_TABLE_VIEW_COLUMNS = 'SET_TABLE_VIEW_COLUMNS';\nexport const SET_FILTERS = 'SET_FILTERS';\nexport const SET_DATES = 'SET_DATES';\nexport const SET_CHART_VIEW_SECOND_COLUMN = 'SET_CHART_VIEW_SECOND_COLUMN';\nexport const setTableViewPage = payload => ({ type: SET_TABLE_VIEW_PAGE, payload });\nexport const setTableViewPerPage = payload => ({ type: SET_TABLE_VIEW_PER_PAGE, payload });\nexport const setTableViewOrder = payload => ({ type: SET_TABLE_VIEW_ORDER, payload });\nexport const setTableViewColumns = payload => ({ type: SET_TABLE_VIEW_COLUMNS, payload });\nexport const setFilters = payload => ({ type: SET_FILTERS, payload });\nexport const setDates = payload => ({ type: SET_DATES, payload });\nexport const setChartViewSecondColumn = payload => ({ type: SET_CHART_VIEW_SECOND_COLUMN, payload });\n\nexport const REQUEST = 0;\nexport const SUCCESS = 1;\nexport const FAILURE = 2;\nexport const FETCH_REPORTS = fetchActions('FETCH_REPORTS');\nexport const FETCH_REPORTS_COUNT = fetchActions('FETCH_REPORTS_COUNT');\nexport const FETCH_ADVERTISERS = fetchActions('FETCH_ADVERTISERS');\nexport const FETCH_CAMPAIGNS = fetchActions('FETCH_CAMPAIGNS');\nexport const fetchReports = fetchActionCreators(FETCH_REPORTS);\nexport const fetchReportsCount = fetchActionCreators(FETCH_REPORTS_COUNT);\nexport const fetchAdvertisers = fetchActionCreators(FETCH_ADVERTISERS);\nexport const fetchCampaigns = fetchActionCreators(FETCH_CAMPAIGNS);\n\nfunction fetchActionCreators(actions) {\n  return ({\n    ...actions,\n    request: payload => ({ type: actions[REQUEST], payload }),\n    success: payload => ({ type: actions[SUCCESS], payload }),\n    failure: payload => ({ type: actions[FAILURE], payload })\n  });\n}\n\nfunction fetchActions(id) {\n  return {\n    [REQUEST]: `${id}_REQUEST`,\n    [SUCCESS]: `${id}_SUCCESS`,\n    [FAILURE]: `${id}_FAILURE`\n  };\n}\n"],"sourceRoot":""}